{
    "name": "Estimate Pi with Montecarlo Partitioned",
    "desc": "This program will estimate Pi using a Parallel Montecarlo Algorithm 1 million iterations.",
    "kernel": "var from=params.data[0];var to=params.data[1];var niter=to-from;var x,y;var i,count=0;var z;count=0;for(i=0;i<niter;i++){x=Math.random();y=Math.random();z=x*x+y*y;if(z<=1)count++;}result={Pi:count};",
    "params": [[0,50002],[50002,100002],[100002,150002],[150002,200002],[200002,250002],[250002,300002],[300002,350002],[350002,400002],[400002,450002],[450002,500002],[500002,550002],[550002,600002],[600002,650002],[650002,700002],[700002,750002],[750002,800002],[800002,850002],[850002,900002],[900002,950002],[950002,1000000]],
    "isPartitioned": true,
    "hasAftBarr": true,
    "afBarrFunc": "var pi=0;for(i=0;i<resultsArr.length;i++){var singleRslt=resultsArr[i];pi+=singleRslt.Pi;}result={result:pi/niter*4};",
    "hasContext": true,
    "context": "The estimated value of Pi is: "
}